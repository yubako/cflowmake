digraph "int main ( void )" {

    label = "int main ( void )";
edge [
    fillcolor = "#0000ff",
    fontcolor = "#000000",
    fontname = "MS Gothic",
    fontsize = "11",
];
node [
    color = "#000000",
    fillcolor = "#e6e6fa",
    fixedsize = "true",
    fontcolor = "#000000",
    fontsize = "11",
    shape = "box",
    style = "filled, rounded",
    width = "4.0",
];



Node_0     [height = "0.1",shape = "point",width = "0.1",label = ""]
Node_1     [height = "0.3",shape = "trapezium",style = "filled",width = "1.0",label = ""]
Node_2     [height = "0.6",label = " 10: memcpy  (  a  ,  b  ,  siezof  (  hogehoge \l         )  ) \l"]
Node_3     [height = "0.3",label = " 11: i  ++ \l"]
Node_4     [height = "0.3",shape = "diamond",style = "filled",width = "1",label = ""]
Node_5     [height = "0.3",shape = "trapezium",style = "filled",width = "1.0",label = ""]
Node_6     [height = "0.3",label = " 16: printf  (  'hogehoge'  ) \l"]
Node_7     [height = "0.3",shape = "invtrapezium",style = "filled",width = "1.0",label = ""]
Node_8     [height = "0.3",shape = "diamond",style = "filled",width = "1.0",label = ""]
Node_18    [height = "0.3",shape = "invtrapezium",style = "filled",width = "1.0",label = ""]
Node_19    [height = "0.1",shape = "point",width = "0.1",label = ""]


Node_0 -> Node_1  [ label = " for(i  =  0 ; i  <  10 ; i  ++ )\l", weight = "2",];
Node_1 -> Node_2  [ weight = "2",];
Node_2 -> Node_3  [ weight = "2",];
Node_3 -> Node_4  [ taillabel = " sizeof  (  a  )  >  0 \l", weight = "2",];
Node_4 -> Node_5  [ taillabel = " while : 1 
{
printf  (  'hogehoge'  ) }
\l", weight = "2",];
Node_5 -> Node_6  [ weight = "2",];
Node_6 -> Node_7  [ weight = "2",];
Node_7 -> Node_8  [ weight = "2",];
Node_8 -> Node_18  [ weight = "2",];
Node_18 -> Node_19  [ weight = "2",];



Node_9     [height = "0.1",shape = "point",width = "0.1",label = ""]
Node_10    [height = "0.3",shape = "diamond",style = "filled",width = "1",label = ""]
Node_11    [height = "0.3",shape = "trapezium",style = "filled",width = "1.0",label = ""]
Node_12    [height = "0.3",label = " 23: a  ++ \l"]
Node_13    [height = "0.3",shape = "invtrapezium",style = "filled",width = "1.0",label = ""]
Node_14    [height = "0.3",shape = "diamond",style = "filled",width = "1.0",label = ""]
Node_17    [height = "0.1",shape = "point",width = "0.1",label = ""]


Node_4 -> Node_9  [ dir = "none", label = "False",];
{rank = same; Node_4; Node_9}
Node_9 -> Node_10  [ taillabel = " (  (  b  +  1  )  ==  1  )  &&  (  (  c  + \l     2  )  ==  2  ) \l", weight = "2",];
Node_10 -> Node_11  [ taillabel = " while : b  +  1  <  2 
{
a  ++ }
\l", weight = "2",];
Node_11 -> Node_12  [ weight = "2",];
Node_12 -> Node_13  [ weight = "2",];
Node_13 -> Node_14  [ weight = "2",];
Node_14 -> Node_17  [ weight = "2",];
Node_8 -> Node_17  [ dir = "back",];
{rank = same; Node_8; Node_17}



Node_15    [height = "0.1",shape = "point",width = "0.1",label = ""]
Node_16    [height = "0.1",shape = "point",width = "0.1",label = ""]


Node_10 -> Node_15  [ dir = "none", label = "False",];
{rank = same; Node_10; Node_15}
Node_15 -> Node_16  [ weight = "2",];
Node_14 -> Node_16  [ dir = "back",];
{rank = same; Node_14; Node_16}
}
 